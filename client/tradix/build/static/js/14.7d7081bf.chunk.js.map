{"version":3,"sources":["jsx/pages/buy-sell.jsx"],"names":["connect","state","error","dashboard_state","user","dispatch","makeAccountDeposit","amount","currency","email","checkAmount","plan","setInvoice","options","setError","e","cryptoTypeRef","useRef","cryptoAddressRef","inputRef","buttonRef","useHistory","useState","errorInComponent","setInComponentError","useEffect","num_of_refresh","JSON","parse","localStorage","getItem","setItem","stringify","setTimeout","window","location","reload","paynow_btn","document","querySelector","disabled","className","defaultActiveKey","id","eventKey","title","onSubmit","preventDefault","button","textContent","form","currency_type","value","deposit_amount","type","name","onChange","placeholder","selected","current","_id","console","log","axios","post","then","result","data","alert","msg","catch","required","ref"],"mappings":"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","file":"static/js/14.7d7081bf.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Accordion, Tabs,Tab, Card } from 'react-bootstrap';\r\nimport Header2 from '../layout/header2';\r\nimport Sidebar from '../layout/sidebar';\r\nimport PageTitle from '../element/page-title';\r\nimport Footer2 from '../layout/footer2';\r\nimport Popup from '../element/popup';\r\nimport { connect } from 'react-redux'\r\nimport { checkAmount, makeAccountDeposit } from '../../redux/app_state/actions';\r\nimport { setInvoice, setError } from '../../redux/app_state/actions';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nfunction BuySell({ checkAmount, makeAccountDeposit, setInvoice, setError, error, user }) {\r\n    // DOM Reference here\r\n    const cryptoTypeRef = useRef(null)\r\n    const cryptoAddressRef = useRef(null)\r\n    const inputRef = useRef(null)\r\n    const buttonRef = useRef(null)\r\n    const history = useHistory()\r\n    const [errorInComponent, setInComponentError] = useState(null)\r\n\r\n    // Purpose of this func\r\n    // After Code-Spliting the bundled files\r\n    // The App does not load the single page completely.\r\n    // SOLUTION:\r\n    // 1. Reload page after the first complete DOM load-up\r\n    useEffect(() => {\r\n        // Get The Refresh Count First!\r\n        const num_of_refresh = JSON.parse(localStorage.getItem('num_of_refresh'))\r\n\r\n         // On Component Mount Persist The Refresh Count onCondition Second\r\n        localStorage.setItem('num_of_refresh', JSON.stringify((num_of_refresh >=2 ? -1 : num_of_refresh) + 1))\r\n\r\n        setTimeout(() => {\r\n            if (num_of_refresh <= 1) {\r\n                window.location.reload()\r\n            }\r\n        }, 500)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (error) setInComponentError(error)\r\n        const paynow_btn = window.document.querySelector(\".custom_paynow_btn\");\r\n        if (errorInComponent) paynow_btn.disabled = true\r\n        if(!errorInComponent) paynow_btn.disabled = false\r\n        \r\n    }, [error, errorInComponent])\r\n    \r\n\r\n    const callCheckAmount = (e) => {\r\n        // clear Component error here.\r\n        setInComponentError(null)\r\n        \r\n        const form = document.querySelector(\".form\");\r\n        const amount = form.deposit_amount.value;\r\n        const plan = form.currency_type.value;\r\n    \r\n        // Import CheckAmount from redux Actions!\r\n        // to check Plan with Amount.\r\n        checkAmount(amount, plan)\r\n\r\n    };\r\n\r\n    const handle_deposit_submit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const button = document.querySelector('.custom_paynow_btn')\r\n        button.textContent = 'Processing...'\r\n\r\n        const form = document.querySelector('.form')\r\n        const currency_type = form.currency_type.value\r\n        const amount = form.deposit_amount.value;\r\n        const email = user?.email\r\n\r\n        const options = {\r\n            currency_type,\r\n            amount,\r\n            email\r\n        }\r\n\r\n        if (!currency_type && !amount) {\r\n            setTimeout(() => button.textContent = 'Pay Now', 2000)\r\n            setError('Please complete the required field')\r\n        } else {\r\n            // Call redux action to make post request to the backend.\r\n            makeAccountDeposit(amount, currency_type, email)\r\n            // setInvoice(options)\r\n            // setTimeout(() => history.push(\"/invoice\"), 2000)\r\n        }\r\n    }\r\n\r\n    const handle_exchange_submit = (e) => {\r\n        e.preventDefault()\r\n\r\n        buttonRef.current.textContent = \"Processing...\"\r\n        buttonRef.current.disabled = true\r\n        \r\n        const id = user?._id\r\n        const email = user?.email\r\n        const amount = inputRef.current.value\r\n        const currency = cryptoTypeRef.current.value\r\n\r\n        const options = {\r\n            id,\r\n            email,\r\n            amount,\r\n            currency\r\n        }\r\n        console.log('Data sent to backend', options)\r\n        \r\n        axios.post(\"/exchange\", options)\r\n            .then(result => {\r\n                buttonRef.current.textContent = \"Exchange\"\r\n                buttonRef.current.disabled = false\r\n                console.log(result);\r\n                console.log(result.data);\r\n                \r\n                // CHECK FOR ERROR RESPONSE\r\n                if (result.data.error) {\r\n                    alert(result.data.error)\r\n                }\r\n\r\n                // CHECK FOR SUCCESS RESPONSE\r\n                if (result.data.msg) {\r\n                    alert(result.data.msg)\r\n                }\r\n\r\n                // Reset Withdrawal Form field.\r\n                inputRef.current.value = \"\"\r\n                cryptoTypeRef.current.value = \"\"\r\n                cryptoAddressRef.current.value = \"\"\r\n                \r\n            })\r\n            .catch(error => {\r\n                buttonRef.current.textContent = \"Exchange\"\r\n                buttonRef.current.disabled = false\r\n                console.log(\"ERR! Creating Withdrawal request ==>\", error)\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header2 />\r\n            <Sidebar />\r\n            <PageTitle />\r\n\r\n            <div className=\"content-body\">\r\n                <div className=\"container-fluid exclude_default_card_style\">\r\n                <div className=\"col-xl-10 col-lg-10 col-md-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"buy-sell-widget\">\r\n\r\n                                        <Tabs defaultActiveKey=\"deposit\" id=\"uncontrolled-tab-example\">\r\n                                            <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"p-3\">\r\n                                                        <h4 className=\"card-title mt-3\">Deposit USDT</h4>\r\n                                                    </div>\r\n                                                    <div className=\"card-body p-3\">\r\n                                                        <form onSubmit={handle_deposit_submit} className=\"form\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <label className=\"input-group-text\"><i className=\"fa fa-money\"></i></label>\r\n                                                                    </div>\r\n                                                                    <input type=\"text\" name=\"deposit_amount\" onChange={ callCheckAmount } className=\"form-control\" placeholder=\"Amount (USD)\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <label className=\"input-group-text\"><i className=\"fas fa-coins\"></i></label>\r\n                                                                    </div>\r\n                                                                    <select name=\"currency_type\" className=\"form-control\">\r\n                                                                        <option value=\"btc\">BTC</option>\r\n                                                                        <option value=\"USDT\" selected>USDT</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <button className=\"custom_paynow_btn btn btn-primary btn-block\">Deposit</button>\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Tab>\r\n                                            <Tab eventKey=\"withdraw\" title=\"Exchange\">\r\n                                                <div className=\"card\">\r\n                                                        <div className=\"card-header\">\r\n                                                            <h4 className=\"card-title mt-3\">Exchange</h4>\r\n                                                        </div>\r\n                                                        <div className=\"card-body\">\r\n                                                            <form onSubmit={handle_exchange_submit}>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <div className=\"input-group mb-3\">\r\n                                                                        <div className=\"input-group-prepend\">\r\n                                                                            <label className=\"input-group-text\"><i className=\"fa fa-money\"></i></label>\r\n                                                                        </div>\r\n                                                                        <input required ref={inputRef} type=\"number\" className=\"form-control\" placeholder=\"Amount (USD)\" />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <div className=\"input-group mb-3\">\r\n                                                                        <div className=\"input-group-prepend\">\r\n                                                                            <label className=\"input-group-text\"><i className=\"fas fa-coins\"></i></label>\r\n                                                                        </div>\r\n                                                                        <select required ref={cryptoTypeRef} className=\"form-control\">\r\n                                                                            <option value=\"BTC\">BTC</option>\r\n                                                                            <option value=\"ETH\">ETH</option>\r\n                                                                            <option value=\"USDT\">USDT</option>\r\n                                                                            <option value=\"BNB\">BNB</option>\r\n                                                                            <option value=\"ADA\">ADA</option>\r\n                                                                            <option value=\"LTC\">LTC</option>\r\n                                                                            <option value=\"SOL\">SOL</option>\r\n                                                                            <option value=\"XRP\">XRP</option>\r\n                                                                            <option value=\"DOGE\">DOGE</option>\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <button ref={buttonRef} className=\"btn btn-primary btn-block\">Exchange</button>\r\n                                                            </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Tab>\r\n                                        </Tabs>\r\n                                        \r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            {/* <p className=\"p-4\">Note: Lorem ipsum dolor sit amet consectetur adipisicing elit. Modi cupiditate\r\n                            suscipit explicabo voluptas eos in tenetur error temporibus dolorum. Nulla!</p> */}\r\n                        </div>\r\n\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-xl-6 col-xxl-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"card-title\">FAQ</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n\r\n                                    <Accordion defaultActiveKey=\"0\" id=\"accordion-faq\" className=\"accordion\">\r\n                                        <Card>\r\n                                            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                                <h5>What Shipping Methods are Available?</h5>\r\n                                            </Accordion.Toggle>\r\n                                            <Accordion.Collapse eventKey=\"0\">\r\n                                                <Card.Body>Anim pariatur cliche reprehenderit, enim eiusmod high\r\n                                                    life accusamus terry richardson ad squid. 3 wolf moon officia aute, non\r\n                                                    cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum\r\n                                                    eiusmod.</Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n                                        <Card>\r\n                                            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                                                <h5>How Long Will it Take To Get My Package?</h5>\r\n                                            </Accordion.Toggle>\r\n                                            <Accordion.Collapse eventKey=\"1\">\r\n                                                <Card.Body>Anim pariatur cliche reprehenderit, enim eiusmod high\r\n                                                    life accusamus terry richardson ad squid. 3 wolf moon officia aute, non\r\n                                                    cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum\r\n                                                    eiusmod.</Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n\r\n                                        <Card>\r\n                                            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                                                <h5>How Do I Track My Order?</h5>\r\n                                            </Accordion.Toggle>\r\n                                            <Accordion.Collapse eventKey=\"2\">\r\n                                                <Card.Body>Anim pariatur cliche reprehenderit, enim eiusmod high\r\n                                                    life accusamus terry richardson ad squid. 3 wolf moon officia aute, non\r\n                                                    cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum\r\n                                                    eiusmod.</Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n\r\n                                    </Accordion>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-6\">\r\n                            <Popup />\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n\r\n            <Footer2 />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        makeAccountDeposit: (amount, currency, email) => dispatch(makeAccountDeposit(amount, currency, email)),\r\n        checkAmount: (amount, plan) => dispatch(checkAmount(amount, plan)),\r\n        setInvoice: (options) => dispatch(setInvoice(options)),\r\n        setError: (e) => dispatch(setError(e))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.dashboard_state.error,\r\n        user: state.dashboard_state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuySell);"],"sourceRoot":""}